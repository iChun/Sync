itemGroup.sync=Sync
sync.breakShellUnit=%1$s destroyed a shell of %2$s
item.Sync_ShellConstructor.name=Shell Constructor
item.Sync_ShellStorage.name=Shell Storage
item.Sync_Treadmill.name=Treadmill
item.Sync_SyncCore.name=Sync Core
death.attack.syncFail=%1$s synced into a dead shell
death.attack.shellConstruct=%1$s died trying to create a new shell
sync.isMorphed=Cannot use! You are morphed.
sync.waila.owner=Shell Owner
sync.waila.progress=Build Progress
sync.waila.entity=Entity Name
sync.waila.active=Active
sync.waila.powerout=Generating
sync.waila.showowner=Show Shell Owner
sync.waila.showprogress=Show Build Progress
sync.waila.showentity=Show Entity Name
sync.waila.showactive=Show Active
sync.waila.showpower.output=Show Power Output
chat.command.clear.success=%s has cleared %s sync progress
chat.command.clear.usage=/Sync clear <player> | Clears a players sync progress. Only use if the player is stuck in "limbo"!
chat.command.sync.usage=/Sync <clear>

sync.config.cat.gameplay.name=Gameplay
sync.config.cat.clientOnly.name=Client Only

sync.config.cat.gameplay.comment=These options affect the gameplay while using the mod.
sync.config.cat.clientOnly.comment=These settings are client-only.

sync.config.prop.shellConstructionPowerRequirement.name=Shell Construction Power Requirement
sync.config.prop.shellStoragePowerRequirement.name=Shell Storage Power Requirement
sync.config.prop.allowCrossDimensional.name=Allow Cross Dimensional
sync.config.prop.reduceHealthOnDeathSync.name=Reduce Health On Death Sync
sync.config.prop.damageGivenOnShellConstruction.name=Damage Given On Shell Construction
sync.config.prop.overrideDeathIfThereAreAvailableShells.name=Override Death If There Are Available Shells
sync.config.prop.prioritizeHomeShellOnDeath.name=Prioritize Home Shell On Death?
sync.config.prop.crossDimensionalSyncingOnDeath.name=Cross Dimensional Syncing on Death
sync.config.prop.allowChunkLoading.name=Allow Chunk Loading
sync.config.prop.hardcoreMode.name=Hardcore Mode
sync.config.prop.ratioRF.name=RF:PG Ratio
sync.config.prop.showAllShellInfoInGui.name=Show All Shell Info In Gui


sync.config.prop.shellConstructionPowerRequirement.comment=Power requirement for Shell Construction
sync.config.prop.shellStoragePowerRequirement.comment=Power requirement per tick in piggawatts to keep shell storage active.\n0 = No requirement
sync.config.prop.allowCrossDimensional.comment=Allow cross-dimensional shell syncing?\nWARNING: There are issues with going in and out of The End, where you require a relog AFTER syncing because chunks may not load.\nEnable The End travel at your own risk.\n0 = No\n1 = Yes, but not in The End\n2 = Yes, even in the End
sync.config.prop.reduceHealthOnDeathSync.comment=Reduce Health On Death Sync (Additive)?\n(2 = 1 heart)
sync.config.prop.damageGivenOnShellConstruction.comment=Number of half hearts damage given to the player when a new shell is constructed.
sync.config.prop.overrideDeathIfThereAreAvailableShells.comment=Allow overriding the death of a player if the player has other shells?\nThe player will resync to the nearest shell.\n0 = No\n1 = Yes, but only to storage units\n2 = Yes, to storage and construction units
sync.config.prop.prioritizeHomeShellOnDeath.comment=Prioritize "Home" Shells when a player dies and resyncs?
sync.config.prop.crossDimensionalSyncingOnDeath.comment=Allow cross dimensional syncing when a player dies and resyncs?
sync.config.prop.allowChunkLoading.comment=Added by request, mod is made to chunkload shells. Untested, unsupported.\nCould crash your world fatally.\nDisable at own risk.
sync.config.prop.hardcoreMode.comment=Enable hardcore mode recipes?\n0 = No\n1 = Yes\n2 = Yes, but only on actual Hardcore mode.
sync.config.prop.ratioRF.comment=Redstone Flux : Piggawatt ratio.\n1RF = <config>PG\nDefault is 1 RF creates 2 PG
sync.config.prop.showAllShellInfoInGui.comment=Show info of all shells in the GUI?\n0 = No\n1 = Just the name will do\n2 = Yes, in all full blown glory!
